import nu.studer.gradle.jooq.JooqEdition

plugins {
    id 'java'
    id "org.flywaydb.flyway" version "7.10.0"
    id 'nu.studer.jooq' version '6.0'
}

dependencies {
    implementation project(':core')

    implementation 'org.flywaydb:flyway-core:' + rootProject.ext.flywayVersion
    implementation 'org.jooq:jooq:' + rootProject.ext.jooqVersion

    implementation group: 'org.mariadb', name: 'r2dbc-mariadb', version: rootProject.ext.mariadbR2dbcVersion

    implementation "org.mariadb.jdbc:mariadb-java-client:" + rootProject.ext.mariadbJdbcVersion

    implementation "com.h2database:h2:" + rootProject.ext.h2Version
    jooqGenerator "com.h2database:h2:" + rootProject.ext.h2Version

    implementation 'com.zaxxer:HikariCP:' + rootProject.ext.hikariVersion


    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.32'
    runtimeOnly group: 'ch.qos.logback', name: 'logback-core', version: '1.2.4'
}

test {
    useJUnitPlatform()
}


// Database with flyway and JOOQ
def flywayDbUrl = 'jdbc:h2:' + buildDir.toString() + "/flywayDb;MODE=MySQL;DATABASE_TO_UPPER=FALSE;CASE_INSENSITIVE_IDENTIFIERS=TRUE"
flyway {
    url = flywayDbUrl
    user = 'user'
    password = 'pwd'
    schemas = ['PUBLIC']
}

jooq {
    version = '3.15.1'
    edition = JooqEdition.OSS
    configurations {
        main {
            generationTool {
                jdbc {
                    driver = 'org.h2.Driver'
                    url = flywayDbUrl
                    user = 'user'
                    password = 'pwd'
                }
                generator {
                    database {
                        inputSchema = 'PUBLIC'
                        outputSchemaToDefault = true
                        outputCatalogToDefault = true
                    }
                    generate {
                        relations = true
                        deprecated = false
                        records = true
                        immutablePojos = true
                        pojosEqualsAndHashCode = true
                        serializablePojos = false
                        javaTimeTypes = true
                    }
                    target {
                        packageName = "ch.mm.reactive.datalayer.jooq"
                        directory = buildDir.toString() + '/generated/jooq-h2'
                    }
                }
            }
        }
    }
}

tasks.named('generateJooq').configure {
    allInputsDeclared = true
    dependsOn flywayMigrate
}
